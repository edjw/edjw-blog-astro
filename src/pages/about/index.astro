---
import PageLayout from "@/layouts/PageLayout.astro";
import { Image } from "astro:assets";
import headshot from "../../images/headshot-crop.png";
const title = "About me";
const socialDescription = "My 'About me' page";
import MarkdownIt from "markdown-it";
const parser = new MarkdownIt();
import { getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";

const codingStuff = await getEntry("stuff", "coding");
const hobbyStuff = await getEntry("stuff", "hobbies");

type stuffObject = {
  name: string;
  description?: string; // Can be markdown
  data: CollectionEntry<"stuff">["data"];
};

const allStuff: stuffObject[] = [
  {
    name: "Coding",
    description:
      "I do a lot of different coding projects. Here are some of them roughly ordered with the most recent first.",
    data: codingStuff?.data || [],
  },
  {
    name: "Hobbies",
    data: hobbyStuff?.data || [],
  },
];
---

<PageLayout title={title} socialDescription={socialDescription}>
  <div class="mb-8">
    <!-- Mobile: stacked layout -->
    <div class="block space-y-4 sm:hidden h-card">
      <p class="text-lg">
        I'm <span class="p-name">Ed Johnson-Williams</span>. This is my personal website.
      </p>
      <div class="flex justify-center" transition-name="headshot">
        <Image
          src={headshot}
          alt="Ed Johnson-Williams headshot"
          class="mt-0 mb-0 h-32 w-32 object-cover u-photo"
          width={500}
          height={500}
          quality={90}
        />
      </div>
    </div>

    <!-- Desktop: flowing text layout -->
    <div class="hidden sm:block h-card" transition-name="headshot">
      <Image
        src={headshot}
        alt="Ed Johnson-Williams headshot"
        class="float-right mb-4 ml-8 h-48 w-48 object-cover u-photo"
        width={500}
        height={500}
        quality={90}
      />
      <p class="text-lg">
        I'm <span class="p-name">Ed Johnson-Williams</span>. This is my personal website.
      </p>

      <section class="space-y-4">
        <div>
          <h3>Where I live</h3>
          <p>I live in <span class="p-locality">Southampton</span> in the south of <span class="p-country-name">England</span> in the <span class="p-country-name">UK</span>.</p>
        </div>
      </section>
    </div>
  </div>

  <h3>What I do</h3>
  <p>
    I work at <span class="p-org">More Onion</span> where I help charities and campaign groups in
    the UK, Austria and Germany to campaign and raise money online.
  </p>
  <p>
    I sing <a href="https://en.wikipedia.org/wiki/Sacred_Harp"
      >Sacred Harp</a
    >
    and <a href="https://en.wikipedia.org/wiki/The_Christian_Harmony"
      >other</a
    >
    <a href="https://en.wikipedia.org/wiki/Shape_note"
      >shapenote music</a
    >.
  </p>

  <h3>What I used to do</h3>
  <p>
    I used to work as a campaigner on trade, poverty, and human rights at <a
      href="https://traidcraftexchange.org">Traidcraft Exchange</a
    >. Before that, I worked as a campaigner on human rights in relation to
    digital technology at <a href="https://www.openrightsgroup.org"
      >Open Rights Group</a
    >.
  </p>

  <h3>Here are some other things I've done</h3>
  <div class="flex flex-col gap-y-8">
    {
      allStuff.map((stuff, index) => {
        const id = `${stuff.name.toLowerCase()}-${String(index + 1)}`;
        return (
          <details id={id} name="project">
            <summary>{stuff.name}</summary>

            {stuff.description && (
              <p set:html={parser.render(stuff.description)} />
            )}

            <div class="mt-12 flex flex-col gap-y-8">
              {stuff.data &&
                stuff.data.map(({ url, name, description }) => (
                  <section>
                    {url ? (
                      <a href={url}>
                        <h3 class="mt-1">{name}</h3>
                      </a>
                    ) : (
                      <h3 class="mt-1">{name}</h3>
                    )}
                    <p set:html={parser.render(description)} />
                  </section>
                ))}
            </div>
            <div class="mt-4">
              <button class="close-button border-b">Close this section</button>
            </div>
          </details>
        );
      })
    }
  </div>

  <h3>Links</h3>
  <ul>
    <li>
      <a href="https://github.com/edjw" rel="me">GitHub</a>
    </li>
    <li>
      <a href="https://mastodon.social/@_edjw" rel="me">Mastodon</a>
    </li>
    <li><a href="https://www.more-onion.com">More Onion â€“ my employer</a></li>
  </ul>

  <script>
    const closeButtons: HTMLButtonElement[] = Array.from(
      document.querySelectorAll("button.close-button")
    );

    closeButtons.forEach((button) => {
      button.addEventListener("click", function (event) {
        if (event.target !== null) {
          const targetElement = event.target as Element;
          const detailsElement = targetElement.closest("details");
          if (detailsElement !== null) {
            detailsElement.removeAttribute("open");
          }
        }
      });
    });
  </script>
</PageLayout>
